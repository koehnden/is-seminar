load("~/Development/DAX/.RData")
plot(dax.sorted,col="blue", xlab="Year", ylab="DAX Value")
p.qrt <- filter(p,filter=rep(1/20,20))
lines(p.qrt,col="red")
lines(reg$fitted.values)
lines(pred$pred,col="green")
dax <- read.csv("~/Development/DAX/table.csv")
library("zoo", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dax.sorted <- dax[order(as.Date(dax$Date, format="%Y-%m-%d")),]
d <- dax.sorted$Date
p <- dax.sorted$Close
dax.sorted <- zoo(p, order.by = d)
# Regression
d <- as.Date(d, format="%Y-%m-%d")
d.ms <- as.numeric(d) * 86400000
d.ms2 <- d.ms^2
reg <- lm(p~ d.ms2)
summary(reg)
# ARIMA model
par(mfrow = c(1,2))
acf(p)
pacf(p)
par(mfrow=c(1,1))
fit <- arima(p,c(0,1,1))
pred <- predict(fit,n.ahead=250)
# Graphical representation
plot(dax.sorted,col="blue", xlab="Year", ylab="DAX Value")
p.qrt <- filter(p,filter=rep(1/20,20))
lines(p.qrt,col="red")
lines(reg$fitted.values)
lines(pred$pred,col="green")
dax <- read.csv("~/Development/DAX/sp500.csv")
library("zoo", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dax.sorted <- dax[order(as.Date(dax$Date, format="%Y-%m-%d")),]
d <- dax.sorted$Date
p <- dax.sorted$Close
dax.sorted <- zoo(p, order.by = d)
# Regression
d <- as.Date(d, format="%Y-%m-%d")
d.ms <- as.numeric(d) * 86400000
d.ms2 <- d.ms^2
reg <- lm(p~ d.ms2)
summary(reg)
# ARIMA model
par(mfrow = c(1,2))
acf(p)
pacf(p)
par(mfrow=c(1,1))
fit <- arima(p,c(0,1,1))
pred <- predict(fit,n.ahead=250)
# Graphical representation
plot(dax.sorted,col="blue", xlab="Year", ylab="DAX Value")
p.qrt <- filter(p,filter=rep(1/20,20))
lines(p.qrt,col="red")
lines(reg$fitted.values)
lines(pred$pred,col="green")
2**2
100 * ((1.025)**(1/30))
100 * ((1.025)**(30))
2.5 * 30
45/30
75/30
5 * (100000/180)
load("~/Development/bads-challenge/.RData")
xgbFit
rfFit
glmFit
lrFit
xgbFit
load("~/Development/bads-challenge/.RData")
library("caret", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
x <- varImp(xgbFit)
x
setwd("~/Development/is-seminar")
x <- function(a,..){
print(a)
}
x(3)
x <- function(a,..){
print(a)
print(... = ...)
}
x(3)
?...
x <- function(a,..){
print(a)
print(...)
}
x(3)
x(3,4)
x <- function(a,..){
print(a)
print(...)
}
x(3)
x <- function(a,..){
print(a)
print(list(...))
}
x(3)
c(3,4)
x <- function(a,..){
print(a)
}
x(3)
x <- function(a,..){
print(a)
print(list(...))
}
x(3,4,5,5)
x(3,c=4,d=5,e=5)
list(data.frame(c(1,2)),data.frame(c(1,2)))
a <- list(data.frame(c(1,2)),data.frame(c(1,2)))
a
a[3]
a[3] <- data.frame(c(3,4))
a
a[1]
length(a)
b <- list()
b
b[1] <- 1
b
b[1]
b[[1]]
c <- a[1]
c
c <- data.frame(c(1,2),c(3,4))
c
c[-1]
c
c <- cbind(c,c(5,6))
c
c[,c(1:3)]
c[,c(1:-1)]
c[,c(1:3)]
c[,!names(c) %in% names(c[,-1])]
c
c[-1]
c[,-1]
c[,-1:]
c[,:-1]
c[,:1]
c[,1:-1]
c
colnames(c)
colnames(c)[-1]
colnames(c)[ncol(c)]
c
c[,ncol(c)]
c[,1:ncol(c)]
c[,1:ncol(c)-1]
a <- list(1,2,3)
a
names(a) <- c("a","b","c")
a
names(a$c) <- c("d")
c
d
a
a
a$d <- 54
a
x <- function(a,...){ print(a); b(...)}
b <- function(a){print(a)}
x(3)
x(3,4)
x <- function(a,...=NULL){ print(a); b(...)}
x(3)
x <- function(a,...=NULL){ print(a); if(!is.null(...){b(...)}}
x <- function(a,...=NULL){ print(a); if(!is.null(...)b(...)}
x <- function(a,...=NULL){
print(a)
if(!is.null(...)){
b(...)
}
}
x(3)
x(3,4)
x(3,4,5)
x <- function(a,...=NULL){
print(a)
b(...)
}
x(3,4,5)
list(a=3,b=4)
c <- list(a=3,b=4)
c
unlist(c)
install.packages("FSelector")
install.packages("rJava")
install.packages("FSelector")
